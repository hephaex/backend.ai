1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "backend-ai-manager.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "backend-ai-manager.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "backend-ai-manager.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "backend-ai-manager.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Backend.AI Manager Configuration:
   - Database: {{ if .Values.postgresql.enabled }}Bundled PostgreSQL{{ else }}External PostgreSQL at {{ .Values.config.database.host }}:{{ .Values.config.database.port }}{{ end }}
   - Redis: {{ if .Values.redis.enabled }}Bundled Redis{{ else }}External Redis at {{ .Values.config.redis.host }}:{{ .Values.config.redis.port }}{{ end }}
   - ETCD: {{ if .Values.etcd.enabled }}Bundled ETCD{{ else }}External ETCD at {{ index .Values.config.etcd.endpoints 0 }}{{ end }}

3. Default Admin Credentials:
   - Please check the Backend.AI Manager documentation for initial setup and admin account creation.

4. Health Check:
   You can check the health of the Manager by accessing:
   {{- if .Values.ingress.enabled }}
   {{- range $host := .Values.ingress.hosts }}
   http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}/v4/manager/status
   {{- end }}
   {{- else }}
   kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ include "backend-ai-manager.fullname" . }} 8080:{{ .Values.service.port }}
   Then visit: http://localhost:8080/v4/manager/status
   {{- end }}

5. Logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "{{ include "backend-ai-manager.selectorLabels" . }}" -f